---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Java
  apt:
    name: "{{ java_version }}"
    state: present

- name: Add Jenkins repository key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present

- name: Add Jenkins repository
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian-stable binary/"
    state: present

- name: Install Jenkins
  apt:
    name: jenkins
    state: present
    update_cache: yes

- name: Start Jenkins service
  service:
    name: jenkins
    state: started
    enabled: yes

- name: Wait for Jenkins to start
  wait_for:
    port: 8080
    delay: 10

- name: Install Jenkins plugins (DevOps/SRE focus)
  jenkins_plugin:
    name: "{{ item }}"
    state: present
  loop: "{{ jenkins_plugins }}"

- name: Restart Jenkins after plugins
  service:
    name: jenkins
    state: restarted

- name: Install Docker
  apt:
    name: docker.io
    state: present

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Add Jenkins user to Docker group
  user:
    name: jenkins
    groups: docker
    append: yes

- name: Install kubectl
  snap:
    name: kubectl
    classic: yes
    state: present

- name: Install Helm
  snap:
    name: helm
    classic: yes
    state: present

- name: Install gcloud CLI
  snap:
    name: google-cloud-cli
    classic: yes
    state: present

- name: Authenticate gcloud (replace with your service account key)
  command: gcloud auth activate-service-account --key-file=/path/to/service-account-key.json
  ignore_errors: yes  # Manual step: upload key to VM

- name: Configure Jenkins admin user
  uri:
    url: "http://localhost:8080/jenkins/scriptText"
    method: POST
    body: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount("admin", "{{ jenkins_admin_password }}")
      instance.setSecurityRealm(hudsonRealm)
      instance.save()
    headers:
      Content-Type: "application/x-www-form-urlencoded"

- name: Enable Jenkins security (DevSecOps)
  uri:
    url: "http://localhost:8080/jenkins/scriptText"
    method: POST
    body: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      instance.setAuthorizationStrategy(strategy)
      instance.save()

- name: Install security tools (DevSecOps)
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ security_tools }}"

- name: Harden SSH (DevSecOps)
  lineinfile:
    path: /etc/ssh/sshd_config
    line: "PermitRootLogin no"
    state: present
  notify: restart ssh
